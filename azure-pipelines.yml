# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  branches:
    include:
    - devops
  paths:
    include:
    - AngularTone
pool: connor's agent

steps:
- checkout: self
  clean: true
  fetchDepth: 1
  
- task: SonarCloudPrepare@1
  displayName: 'Prepare analysis on SonarCloud'
  inputs:
    SonarCloud: 'P3 sonarcloud'
    organization: '210215-usf-revmixer'
    scannerMode: 'CLI'
    configMode: 'manual'
    cliProjectKey: '210215-USF-RevMixer_RevMixer-Frontend'
    cliProjectName: 'RevMixer-Frontend'
    cliSources: 'AngularTone/src'
    extraProperties: |
      sonar.coverage.exclusions=**/*.spec.ts
      sonar.javascript.lcov.reportPaths= **/coverage/AngularTone/lcov.info

- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
    checkLatest: true

- task: Npm@1
  displayName: 'npm install'
  inputs:
    command: 'install'
    workingDir: 'AngularTone'

- task: Npm@1
  displayName: 'npm run build'
  inputs:
    command: 'custom'
    workingDir: 'AngularTone'
    customCommand: 'run build'

- script: npx ng test --browsers ChromeHeadless --no-watch --code-coverage
  displayName: ng test
  workingDirectory: 'AngularTone/src'
  continueOnError: true 
# - task: CmdLine@2
#   inputs:
#     script: |
#       echo "Structure of work folder of this pipeline:"
#       tree $(Agent.WorkFolder)\1 /f
      
#       echo "Build.ArtifactStagingDirectory:" 
      
#       echo "$(Build.ArtifactStagingDirectory)"

#       echo "Agent.TempDirectory" 
      
#       echo "$(Agent.TempDirectory)"

#       echo "Build.BinariesDirectory:" 
      
#       echo "$(Build.BinariesDirectory)"
      
#       echo "Build.SourcesDirectory:"
      
#       echo "$(Build.SourcesDirectory)"
# - task: PublishCodeCoverageResults@1
#   inputs:
#     codeCoverageTool: 'cobertura'
#     summaryFileLocation: '**/coverage/AngularTone/cobertura-coverage.xml'

- task: SonarCloudAnalyze@1

- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'